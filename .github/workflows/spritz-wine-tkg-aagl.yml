name: Spritz-Wine-TkG-AAGL

on:
  workflow_dispatch:
  push:
    tags:
      - "wine-tkg-aagl*"

jobs:
  build:
    strategy:
      matrix:
        config:
          - name: Spritz-Wine-TkG-AAGL
            branch: staging
            allow_fail: false

    runs-on: ubuntu-22.04
    continue-on-error: ${{ matrix.config.allow_fail }}

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: bootstraps-aagl.yml
          workflow_conclusion: success
          path: /opt

      - name: Restore ccache
        id: ccache-restore
        uses: actions/cache/restore@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.config.name }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ matrix.config.name }}-

      - name: Build Wine
        run: |
          sudo apt update
          sudo apt install -y debootstrap perl git wget xz-utils bubblewrap autoconf ccache
          sudo tar -C /opt -xpf /opt/Bootstraps/bootstraps.tar.xz
          chmod +x build_wine.sh
          export EXPERIMENTAL_WOW64="true"
          export USE_CCACHE="true"
          WINE_BRANCH=${{ matrix.config.branch }} ./build_wine.sh
          sha256sum *.tar.xz

      - name: Save ccache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ~/.ccache
          key: ${{ steps.ccache-restore.outputs.cache-primary-key }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.name }}
          path: ./*.tar.xz

  release:
    runs-on: ubuntu-22.04
    needs: [build]
    if: github.ref_type == 'tag'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Extract version from tag
        id: extract_version
        run: |
          TAG="${{ github.ref_name }}"
          VERSION=$(echo "$TAG" | sed -n 's/^wine-tkg-aagl-\(v[0-9]\+\.[0-9]\+-[0-9]\+\)$/\1/p')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: artifacts/**/*.tar.xz
          name: "Spritz-Wine-TkG-AAGL-${{ steps.extract_version.outputs.version }}"
          make_latest: true